{"version":3,"sources":["Components/CurrentEmployees.js","Components/SearchArea.js","utils/API.js","Components/UserDirectory.js","App.js","reportWebVitals.js","index.js"],"names":["CurrentEmployees","props","className","alt","firstName","src","icon","lastName","phone","address","email","SearchArea","placeholder","name","type","onChange","axios","get","UserDirectory","state","currentemployees","searchArea","sortEmployees","sorted","componentDidMount","API","then","results","setState","data","handleChange","event","target","value","filter","first","toLowerCase","includes","last","console","log","sorting","render","sortingEmps","label","map","employee","picture","medium","location","street","number","city","postcode","id","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"4PA2BeA,EAzBU,SAACC,GACtB,OACI,qBAAIC,UAAW,YAAf,UACI,6BACI,qBAAKC,IAAKF,EAAMG,UAAWC,IAAKJ,EAAMK,SAE1C,+BACKL,EAAMG,UADX,IACuBH,EAAMM,YAK7B,6BACKN,EAAMO,QAEX,6BACGP,EAAMQ,UAET,6BACGR,EAAMS,YCRNC,EAXI,SAACV,GAChB,OACI,qBAAKC,UAAY,wCAAjB,SACI,+BACI,uBAAOU,YAAa,iBAAiBC,KAAM,aAAaC,KAAM,OAC5DZ,UAAW,sCAAsCa,SAAUd,EAAMc,gB,iBCJpE,EACH,WACR,OAAOC,IAAMC,IAJD,kDC4FDC,E,4MAvFXC,MAAQ,CACJC,iBAAkB,GAClBC,WAAY,GACZC,cAAe,GACfC,QAAQ,G,EAIZC,kBAAoB,WAChBC,IAAeC,MAAK,SAACC,GACjB,EAAKC,SAAS,CACVR,iBAAkBO,EAAQE,KAAKF,QAC/BL,cAAeK,EAAQE,KAAKF,c,EAKxCG,aAAe,SAACC,GACZ,IAAIlB,EAAOkB,EAAMC,OAAOC,MACxB,EAAuC,EAAKd,MAAtCC,EAAN,EAAMA,iBACFE,GADJ,EAAwBD,WACJD,EAAiBc,QAAO,SAACX,GACzC,OACIA,EAAOV,KAAKsB,MAAMC,cAAcC,SAASxB,EAAKuB,gBAC3Cb,EAAOV,KAAKyB,KAAKF,cAAcC,SAASxB,EAAKuB,gBAC7Cb,EAAOb,MAAM0B,cAAcC,SAASxB,EAAKuB,mBAGpD,EAAKR,SAAS,CAAEP,WAAYR,EAAMS,kBAClCiB,QAAQC,IAAI3B,I,EAUhB4B,QAAU,SAACV,GACP,EAAKH,SAAS,CAAEP,WAAYU,EAAMC,OAAOC,QAAS,WAC9C,EAAKH,eACL,EAAKF,SAAS,CAAEL,QAAQ,Q,EAIhCmB,OAAS,WACL,OAEI,cADA,CACA,OAAKxC,UAAU,oBAAf,UACI,gCACI,oDACA,gGACA,cAAC,EAAD,CAAYW,KAAK,aAAa4B,QAAS,EAAKE,YAAaC,MAAM,aAAa7B,SAAU,EAAKe,kBAE/F,kCACI,gCACI,+BACI,uCACA,sCACA,8CACA,yCACA,4CAIR,gCAGQ,EAAKX,MAAMG,cAAcuB,KAAI,SAACC,GAAD,OACzB,cAAC,EAAD,CAA0C1C,UAAW0C,EAASjC,KAAKsB,MAE/D5B,SAAUuC,EAASjC,KAAKyB,KAAM9B,MAAOsC,EAAStC,MAAOE,MAAOoC,EAASpC,MAErEJ,KAAMwC,EAASC,QAAQC,OAEvBvC,QAASqC,EAASG,SAASC,OAAOC,OAAS,IAAML,EAASG,SAASC,OAAOrC,KAAO,KAC7EiC,EAASG,SAASG,KAAO,KAAON,EAASG,SAAS9B,MAAQ,IAAM2B,EAASG,SAASI,UAPnEP,EAASQ,GAAGrB,mB,YAtEvCsB,a,MCObC,MARf,WACE,OACE,qBAAKtD,UAAU,MAAf,SACE,cAAC,EAAD,OCKSuD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASvB,OACP,cAAC,IAAMwB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.e600f9ac.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst CurrentEmployees = (props) => {\r\n    return(\r\n        <tr className= \"Emp-style\">\r\n            <td>\r\n                <img alt={props.firstName} src={props.icon} />\r\n            </td>\r\n            <td>\r\n                {props.firstName} {props.lastName}\r\n            </td>\r\n            {/* <td>\r\n                {props.dob}\r\n            </td> */}\r\n            <td>\r\n                {props.phone}\r\n            </td>\r\n            <td>\r\n              {props.address}\r\n            </td>\r\n            <td>\r\n              {props.email}  \r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default CurrentEmployees;","import React from 'react';\r\n\r\nconst SearchArea = (props) => {\r\n    return(\r\n        <div className = \"d-flex justify-content-center mx-auto\">\r\n            <form>\r\n                <input placeholder= \"Search by Name\" name= \"SearchArea\" type= \"text\" \r\n                  className= \"form-control-lg search-font mx-auto\" onChange={props.onChange} />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchArea;","import axios from \"axios\";\r\nconst BASEURL = \"https://randomuser.me/api/?results=200&nat=us\";\r\n\r\nexport default {\r\n  getUsers: function() {\r\n    return axios.get(BASEURL);\r\n  }\r\n};","import React, { Component } from \"react\";\r\nimport CurrentEmployees from \"./CurrentEmployees.js\";\r\nimport SearchArea from \"./SearchArea.js\";\r\nimport API from \"../utils/API\";\r\n\r\nclass UserDirectory extends Component {\r\n    state = {\r\n        currentemployees: [],\r\n        searchArea: \"\",\r\n        sortEmployees: [],\r\n        sorted: false,\r\n    };\r\n\r\n    //receive data and renders once or more than once\r\n    componentDidMount = () => {\r\n        API.getUsers().then((results) => {\r\n            this.setState({\r\n                currentemployees: results.data.results,\r\n                sortEmployees: results.data.results,\r\n            });\r\n        });\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let name = event.target.value;\r\n        let { currentemployees, searchArea } = this.state;\r\n        let sortEmployees = currentemployees.filter((sorted) => {\r\n            return (\r\n                sorted.name.first.toLowerCase().includes(name.toLowerCase())\r\n                || sorted.name.last.toLowerCase().includes(name.toLowerCase())\r\n                || sorted.email.toLowerCase().includes(name.toLowerCase())\r\n            );\r\n        });\r\n        this.setState({ searchArea: name, sortEmployees })\r\n        console.log(name)\r\n    }\r\n\r\n    //Sort through employees and render to screen matched search\r\n    // sortingEmps = () => {\r\n        \r\n     \r\n    //     this.setState({ sortEmployees });\r\n    // };\r\n\r\n    sorting = (event) => {\r\n        this.setState({ searchArea: event.target.value }, () => {\r\n            this.handleChange();\r\n            this.setState({ sorted: true });\r\n        });\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            //Header section\r\n            <div className=\"header-background\">\r\n                <div>\r\n                    <h3>Employee Directory</h3>\r\n                    <h2>Enter an employee name into the search area that your seeking.</h2>\r\n                    <SearchArea name=\"searchArea\" sorting={this.sortingEmps} label=\"SearchArea\" onChange={this.handleChange} />\r\n                </div>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Image</th>\r\n                            <th>Name</th>\r\n                            <th>Phone Number</th>\r\n                            <th>Address</th>\r\n                            <th>Email</th>\r\n                            {/* <th>D.O.B.</th> */}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            //state before user enters a search\r\n                            this.state.sortEmployees.map((employee) => (\r\n                                <CurrentEmployees key={employee.id.value} firstName={employee.name.first}\r\n\r\n                                    lastName={employee.name.last} phone={employee.phone} email={employee.email}\r\n\r\n                                    icon={employee.picture.medium} //dob={employee.dob.date}\r\n\r\n                                    address={employee.location.street.number + \" \" + employee.location.street.name + \" ,\" +\r\n                                        employee.location.city + \" ,\" + employee.location.state + \" \" + employee.location.postcode} />\r\n\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserDirectory;","import React from 'react';\nimport UserDirectory from './Components/UserDirectory';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UserDirectory />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}